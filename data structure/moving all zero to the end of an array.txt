// ORDER OF COMPLEXITY O(N^2)
#include<iostream>
using namespace std;
void movezero(int arr[],int n){
    int i,j;
    for(i=0;i<=n;i++)
        if(arr[i]==0)
            for(j=i+1;j<=n;j++)
                if(arr[j]!=0){
                    int temp;
                    temp=arr[i];
                    arr[i]=arr[j];
                    arr[j]=temp;
                }
}
int main(){
    int arr[]={1,3,0,0,3,4,0,9};
    for(int i=0;i<=8;i++)
        cout<<arr[i]<<" ";
        printf("\n");
    movezero(arr,8);
    for(int i=0;i<=8;i++)
        cout<<arr[i]<<" ";
}
// --------------------------------------------------------------------------
// this is a efficient code for moving all zero to the end OF AN array  ORDER OF COMPLEXITY O(N)
#include<iostream>
using namespace std;
void movezero(int arr[], int n){
    int count=0;
    for(int i=0;i<n;i++){
        if(arr[i]!=0){
            int temp;
            temp=arr[i];
            arr[i]=arr[count];
            arr[count]=temp;
            count++;
        }
    }
}
int main(){
    int arr[]={1,2,0,2,0,5};
    for(int i=0;i<6;i++)
        cout<<arr[i]<<" ";
        printf("\n");
    movezero(arr,6);
    for(int i=0;i<6;i++)
        cout<<arr[i]<<" ";
}