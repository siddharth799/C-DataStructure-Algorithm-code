//code for circular singly linkedlist
#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node *link;
};
void main(){
    int size;
    printf("enter size of CSLL");
    scanf("%d",&size);
    
    //code for creating first node of CSLL
    
    struct node *temp=malloc(sizeof(struct node));
    printf("enter data in first node ");
    scanf("%d",&(temp->data));
    struct node *head=temp;
    temp->link=temp;
    
    //code for creating n node of CSLL
    int i;
    for(i=1;i<=size;i++){
        struct node *ptr=malloc(sizeof(struct node));
        printf("enter data in %d node ",i+1);
        scanf("%d",&(ptr->data));
        struct node *pointer=temp;
        temp->link=ptr;
        ptr->link=pointer;
        temp=temp->link;
        
    }
    //code for insert linkedlist at the begining of CSLL
        if(head==NULL)
        {
            struct node *newptr=malloc(sizeof(struct node));
            printf("enter data in new node ");
            scanf("%d",&(newptr->data));
            newptr->link=head;
            head=newptr;
        }
        else
        {
            struct node *newptr=malloc(sizeof(struct node));
            printf("enter data in new node ");
            scanf("%d",&(newptr->data));
            temp->link=newptr;
            newptr->link=head;
            head=newptr;
        }
    //printing data in CSLL 
    temp=head;
    int count=1;
    if(head==NULL)
        return;
    printf("data present in 1 node =%d",temp->data);
    printf("\n");
    for(temp=head->link;temp!=head;temp=temp->link){
        count++;
        printf("data present in %d node =%d",count,temp->data);
        printf("\n");
        
        
    }
}